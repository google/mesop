<<<<<<< ORIGINAL
  state = me.state(State)
  with me.box(
    style=me.Style(
      color=me.theme_var("on-surface"),
      background=me.theme_var("surface-container-lowest"),
      display="flex",
      flex_direction="column",
      height="100%",
      padding=me.Padding.all(15),
    )
  ):
    # Fancy header
    with me.box(
      style=me.Style(
        background=me.theme_var("primary"),
        padding=me.Padding.all(16),
        border_radius=8,
        margin=me.Margin(bottom=20),
        display="flex",
        justify_content="space-between",
      )
    ):
      with me.box(style=me.Style(display="flex", align_items="center")):
        me.icon(
          "chat", style=me.Style(color=me.theme_var("on-primary"), font_size=24)
        )
        me.text(
          "AI Chatbot",
          style=me.Style(
            color=me.theme_var("on-primary"),
            font_size=24,
            font_weight="bold",
            margin=me.Margin(left=12),
            flex_grow=1,
          ),
        )
        me.text(
          "Talk to our intelligent assistant",
          style=me.Style(
            color=me.theme_var("on-primary"),
            font_size=16,
            margin=me.Margin(left=12),
          ),
        )
      with me.content_button(type="icon"):
        me.icon("dark_mode", style=me.Style(color=me.theme_var("on-primary")))
    # This contains the chat messages that have been recorded. This takes 50fr.
    # This section can be replaced with other types of chat messages.

    # We set overflow to scroll so that the chat input will be fixed at the bottom.
    with me.box(style=me.Style(overflow_y="scroll", flex_grow=1)):
      for msg in state.output:
        # User chat message
        if msg.role == "user":
          with me.box(
            style=me.Style(display="flex", gap=15, margin=me.Margin.all(20))
          ):
            # User avatar/icon box
            me.text(
              "U",
              style=me.Style(
                background=me.theme_var("primary"),
                border_radius="50%",
                color=me.theme_var("on-primary"),
                font_size=20,
                height=40,
                width=40,
                text_align="center",
                line_height="1",
                padding=me.Padding(top=10),
                margin=me.Margin(top=16),
              ),
            )
            # User query
            me.markdown(msg.content)
        else:
          # Bot chat message
          with me.box(
            style=me.Style(display="flex", gap=15, margin=me.Margin.all(20))
          ):
            # Bot avatar/icon box
            me.text(
              "B",
              style=me.Style(
                background=me.theme_var("secondary"),
                border_radius="50%",
                color=me.theme_var("on-secondary"),
                font_size=20,
                height=40,
                width="40px",
                text_align="center",
                line_height="1",
                padding=me.Padding(top=10),
                margin=me.Margin(top=16),
              ),
            )

            with me.box(
              style=me.Style(display="flex", flex_direction="column")
            ):
              # Bot message response
              me.markdown(
                msg.content,
                style=me.Style(color=me.theme_var("on-surface")),
              )

              with me.box(
                style=me.Style(
                  display="flex",
                  gap=10,
                  margin=me.Margin(top=8),
                )
              ):
                with me.content_button(
                  type="icon",
                  style=me.Style(
                    background=me.theme_var("surface-container-low"),
                  ),
                ):
                  me.icon("thumb_up")
                with me.content_button(
                  type="icon",
                  style=me.Style(
                    background=me.theme_var("surface-container-low"),
                  ),
                ):
                  me.icon("thumb_down")
                with me.content_button(
                  type="icon",
                  style=me.Style(
                    background=me.theme_var("surface-container-low"),
                  ),
                ):
                  me.icon("refresh")

    # This is for the basic chat input. This is the second row at 1fr.
    # This section can be replaced with other types of chat inputs.
    with me.box(
      style=me.Style(
        border_radius=16,
        padding=me.Padding.all(8),
        background=me.theme_var("surface-container-low"),
        display="flex",
        width="100%",
      )
    ):
      with me.box(
        style=me.Style(
          flex_grow=1,
        )
      ):
        me.native_textarea(
          key="chat_input",
          value=state.input,
          on_blur=on_chat_input,
          autosize=True,
          min_rows=4,
          placeholder="Enter your prompt",
          style=me.Style(
            color=me.theme_var("on-surface-variant"),
            padding=me.Padding(top=16, left=16),
            background=me.theme_var("surface-container-low"),
            outline="none",
            width="100%",
            overflow_y="auto",
            border=me.Border.all(
              me.BorderSide(style="none"),
            ),
          ),
        )
      with me.content_button(
        type="icon",
        on_click=on_click_submit_chat_msg,
        # If we're processing a message prevent new queries from being sent
        disabled=state.in_progress,
      ):
        me.icon("send")
=======
  state = me.state(State)
  with me.box(
    style=me.Style(
      color=me.theme_var("on-surface"),
      background=me.theme_var("surface-container-lowest"),
      display="flex",
      flex_direction="row",
      height="100%",
      padding=me.Padding.all(15),
    )
  ):
    # Left sidebar
    with me.box(
      style=me.Style(
        background=me.theme_var("surface-container-low"),
        display="flex",
        flex_direction="column",
        padding=me.Padding.all(16),
      )
    ):
      pass

    with me.box(
      style=me.Style(
        color=me.theme_var("on-surface"),
        background=me.theme_var("surface-container-lowest"),
        display="flex",
        flex_direction="column",
        height="100%",
        padding=me.Padding.all(15),
      )
    ):
      # Fancy header
      with me.box(
        style=me.Style(
          background=me.theme_var("primary"),
          padding=me.Padding.all(16),
          border_radius=8,
          margin=me.Margin(bottom=20),
          display="flex",
          justify_content="space-between",
        )
      ):
        with me.box(style=me.Style(display="flex", align_items="center")):
          me.icon(
            "chat",
            style=me.Style(color=me.theme_var("on-primary"), font_size=24),
          )
          me.text(
            "AI Chatbot",
            style=me.Style(
              color=me.theme_var("on-primary"),
              font_size=24,
              font_weight="bold",
              margin=me.Margin(left=12),
              flex_grow=1,
            ),
          )
          me.text(
            "Talk to our intelligent assistant",
            style=me.Style(
              color=me.theme_var("on-primary"),
              font_size=16,
              margin=me.Margin(left=12),
            ),
          )
        with me.content_button(type="icon"):
          me.icon("dark_mode", style=me.Style(color=me.theme_var("on-primary")))
      # This contains the chat messages that have been recorded. This takes 50fr.
      # This section can be replaced with other types of chat messages.

      # We set overflow to scroll so that the chat input will be fixed at the bottom.
      with me.box(style=me.Style(overflow_y="scroll", flex_grow=1)):
        for msg in state.output:
          # User chat message
          if msg.role == "user":
            with me.box(
              style=me.Style(display="flex", gap=15, margin=me.Margin.all(20))
            ):
              # User avatar/icon box
              me.text(
                "U",
                style=me.Style(
                  background=me.theme_var("primary"),
                  border_radius="50%",
                  color=me.theme_var("on-primary"),
                  font_size=20,
                  height=40,
                  width=40,
                  text_align="center",
                  line_height="1",
                  padding=me.Padding(top=10),
                  margin=me.Margin(top=16),
                ),
              )
              # User query
              me.markdown(msg.content)
          else:
            # Bot chat message
            with me.box(
              style=me.Style(display="flex", gap=15, margin=me.Margin.all(20))
            ):
              # Bot avatar/icon box
              me.text(
                "B",
                style=me.Style(
                  background=me.theme_var("secondary"),
                  border_radius="50%",
                  color=me.theme_var("on-secondary"),
                  font_size=20,
                  height=40,
                  width="40px",
                  text_align="center",
                  line_height="1",
                  padding=me.Padding(top=10),
                  margin=me.Margin(top=16),
                ),
              )

              with me.box(
                style=me.Style(display="flex", flex_direction="column")
              ):
                # Bot message response
                me.markdown(
                  msg.content,
                  style=me.Style(color=me.theme_var("on-surface")),
                )

                with me.box(
                  style=me.Style(
                    display="flex",
                    gap=10,
                    margin=me.Margin(top=8),
                  )
                ):
                  with me.content_button(
                    type="icon",
                    style=me.Style(
                      background=me.theme_var("surface-container-low"),
                    ),
                  ):
                    me.icon("thumb_up")
                  with me.content_button(
                    type="icon",
                    style=me.Style(
                      background=me.theme_var("surface-container-low"),
                    ),
                  ):
                    me.icon("thumb_down")
                  with me.content_button(
                    type="icon",
                    style=me.Style(
                      background=me.theme_var("surface-container-low"),
                    ),
                  ):
                    me.icon("refresh")

      # This is for the basic chat input. This is the second row at 1fr.
      # This section can be replaced with other types of chat inputs.
      with me.box(
        style=me.Style(
          border_radius=16,
          padding=me.Padding.all(8),
          background=me.theme_var("surface-container-low"),
          display="flex",
          width="100%",
        )
      ):
        with me.box(
          style=me.Style(
            flex_grow=1,
          )
        ):
          me.native_textarea(
            key="chat_input",
            value=state.input,
            on_blur=on_chat_input,
            autosize=True,
            min_rows=4,
            placeholder="Enter your prompt",
            style=me.Style(
              color=me.theme_var("on-surface-variant"),
              padding=me.Padding(top=16, left=16),
              background=me.theme_var("surface-container-low"),
              outline="none",
              width="100%",
              overflow_y="auto",
              border=me.Border.all(
                me.BorderSide(style="none"),
              ),
            ),
          )
        with me.content_button(
          type="icon",
          on_click=on_click_submit_chat_msg,
          # If we're processing a message prevent new queries from being sent
          disabled=state.in_progress,
        ):
          me.icon("send")
>>>>>>> UPDATED
